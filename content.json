{"meta":{"title":"4CH4N ZKUAN","subtitle":"世界上不存在误解,无非是看法相左。","description":"","author":"zkuan","url":"https://whoiszkuan.github.io","root":"/"},"pages":[{"title":"about","date":"2021-08-10T14:37:27.000Z","updated":"2021-08-10T16:53:41.463Z","comments":true,"path":"about/index.html","permalink":"https://whoiszkuan.github.io/about/index.html","excerpt":"","text":""},{"title":"404","date":"2021-08-10T14:46:38.000Z","updated":"2021-08-10T14:47:46.367Z","comments":true,"path":"404/index.html","permalink":"https://whoiszkuan.github.io/404/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-08-10T15:08:53.000Z","updated":"2021-08-10T15:09:33.727Z","comments":true,"path":"categories/index.html","permalink":"https://whoiszkuan.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-08-10T15:21:00.000Z","updated":"2021-08-10T15:21:27.431Z","comments":true,"path":"tags/index.html","permalink":"https://whoiszkuan.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Http协议基础","slug":"Http协议基础","date":"2021-09-10T11:39:28.000Z","updated":"2021-09-10T12:17:38.278Z","comments":true,"path":"2021/09/10/Http协议基础/","link":"","permalink":"https://whoiszkuan.github.io/2021/09/10/Http%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/","excerpt":"","text":"概念服务器和客户端进行数据交互的一种形式。 常用请求头信息 User-Agent：请求载体的身份标识。 Connection：请求完毕后，是断开连接还是保持连接。 常用响应头信息 Content-Type：服务器响应回客户端的数据类型。 https协议(Hyper Text Transfer Protocol) 安全的超文本传输协议 加密方式 对称密钥加密 非对称密钥加密 证书密钥加密(https) 对称密钥加密 客户端向服务器发送一条信息，首先客户端会采用已知的算法对信息进行加密，比如MD5或者Base64加密，接收端对加密的信息进行解密的时候需要用到密钥，中间会传递密钥，（加密和解密的密钥是同一个），密钥在传输中间是被加密。 有潜在的危险，一旦被窃听，或者信息被挟持，就有可能破解密钥，而破解其中的信息。因此“共享密钥加密”这种方式存在安全隐患。 非对称密钥加密 “非对称加密”使用的时候有两把锁，一把叫做“私有密钥”，一把是“公开密钥”，使用非对象加密的加密方式的时候，服务器首先告诉客户端按照自己给定的公开密钥进行加密处理，客户端按照公开密钥加密以后，服务器接受到信息再通过自己的私有密钥进行解密。 这样做的好处就是解密的钥匙根本就不会进行传输，因此也就避免了被挟持的风险。就算公开密钥被窃听者拿到了，它也很难进行解密，因为解密过程是对离散对数求值，这可不是轻而易举就能做到的事。 缺点： 如何保证接收端向发送端发出公开秘钥的时候，发送端确保收到的是预先要发送的，而不会被挟持。只要是发送密钥，就有可能有被挟持的风险。 非对称加密的方式效率比较低，它处理起来更为复杂，通信过程中使用就有一定的效率问题而影响通信速度 证书密钥加密数字证书认证机构是客户端与服务器都可信赖的第三方机构。 传播过程： 服务器的开发者携带公开密钥，向数字证书认证机构提出公开密钥的申请，数字证书认证机构在认清申请者的身份，审核通过以后，会对开发者申请的公开密钥做数字签名，然后分配这个已签名的公开密钥，并将密钥放在证书里面，绑定在一起 服务器将这份数字证书发送给客户端，因为客户端也认可证书机构，客户端可以通过数字证书中的数字签名来验证公钥的真伪，来确保服务器传过来的公开密钥是真实的。一般情况下，证书的数字签名是很难被伪造的，这取决于认证机构的公信力。一旦确认信息无误之后，客户端就会通过公钥对报文进行加密发送，服务器接收到以后用自己的私钥进行解密。","categories":[{"name":"Web安全","slug":"Web安全","permalink":"https://whoiszkuan.github.io/categories/Web%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://whoiszkuan.github.io/tags/HTTP/"},{"name":"Web","slug":"Web","permalink":"https://whoiszkuan.github.io/tags/Web/"}]},{"title":"gTile-Linux应用分屏工具","slug":"gTile-Linux应用分屏工具","date":"2021-08-14T07:26:29.000Z","updated":"2021-08-18T09:06:06.503Z","comments":true,"path":"2021/08/14/gTile-Linux应用分屏工具/","link":"","permalink":"https://whoiszkuan.github.io/2021/08/14/gTile-Linux%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%8F%E5%B7%A5%E5%85%B7/","excerpt":"","text":"简介这是Gnome-Shell的一个扩展插件，由于Gnome桌面的平铺方案最多只能两个窗口，对于大屏幕显示器来说是不够用的，而gTile可以解决这个问题。 gTile拥有多个内置平铺方案，可平铺多个窗口，增加工作效率。可自行配置快捷键唤醒gTile进行平铺 安装Gnome Extensions Install先安装Gnome-Shell再安装扩展 gTile-Gnome-Shell 配置打开扩展方式：Gnome Tweak Tools(优化) –&gt; Extensions(扩展) –&gt; Gtile(点击开启按钮) 点击设置按钮进入配置界面，点击(Accelerators)选项可配置快捷键，唤醒gTile的快捷键为Super+Enter。更多快捷键请自行探索。 使用方法 Super+Enter唤醒gTile 按下键盘数字键0～9使用预设方案Super+Enter+3 还有更多预设方案可多个窗口平铺 GitHub gTile:Gtile项目地址","categories":[{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/categories/Linux/"},{"name":"配置","slug":"Linux/配置","permalink":"https://whoiszkuan.github.io/categories/Linux/%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/tags/Linux/"},{"name":"Tools","slug":"Tools","permalink":"https://whoiszkuan.github.io/tags/Tools/"}]},{"title":"关于自己的Linux的一些配置","slug":"关于自己的Linux的一些配置","date":"2021-08-12T04:02:39.000Z","updated":"2021-08-12T07:13:12.113Z","comments":true,"path":"2021/08/12/关于自己的Linux的一些配置/","link":"","permalink":"https://whoiszkuan.github.io/2021/08/12/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84Linux%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/","excerpt":"","text":"简言由于平时比较喜欢折腾Linux，经常会把系统反复安装，许多原先配置好的东西都忘记了,所以打算写一篇来记录一下自己平时配置的文件操作。注：本人使用的Linux系统为Kali Linux rangerranger是一款命令行文件资源管理器，提供多级视图，方便操作 sudo apt install ranger 启动命令：ranger proxychainsproxychains是一款命令行代理工具，可将当前应用的TCP转发至代理，非全局代理。目前支持Tor,HTTP,Socks代理。 git clone https://github.com/rofl0r/proxychains-ngcd proxychains-ng./configuresudo make &amp;&amp; make install 代理配置文件位置：/etc/proxychains.conf启动命令：proxychains4 &lt;启动应用&gt; Vim相比Linux下的程序员都知道Vim，由于自己平时比较懒，不想学Vim的语法，所以Vim并没有自己配置，而是使用了Vim-Plus，即开即用。 git clone https://github.com/chxuan/vimplus.git ~/.vimpluscd ~/.vimplus./install.sh Vim的主题被我注释掉了，使用的主题是Terminal自带的Kali-Dark主题配色。 music-dlmusic-dl是一款基于Python3的命令行网络音乐聚合搜索下载工具。 使用pip3安装，前提需要安装pip3：sudo apt install pip3安装music-dl:sudo pip3 install pymusic-dl $ music-dl –helpUsage: music-dl [OPTIONS] Search and download music from netease, qq, kugou, baidu and xiami. Example: music-dl -k “周杰伦” Options: –version Show the version and exit. -k, –keyword TEXT 搜索关键字，歌名和歌手同时输入可以提高匹配（如 空帆船 朴树） -u, –url TEXT 通过指定的歌曲URL下载音乐 -p, –playlist TEXT 通过指定的歌单URL下载音乐 -s, –source TEXT Supported music source: qq netease kugou baidu -n, –number INTEGER Number of search results -o, –outdir TEXT Output directory -x, –proxy TEXT Proxy (e.g. http://127.0.0.1:1087) -v, –verbose Verbose mode –lyrics 同时下载歌词 –cover 同时下载封面 –nomerge 不对搜索结果列表排序和去重 –help Show this message and exit.","categories":[{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/categories/Linux/"},{"name":"配置","slug":"Linux/配置","permalink":"https://whoiszkuan.github.io/categories/Linux/%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/tags/Linux/"}]}],"categories":[{"name":"Web安全","slug":"Web安全","permalink":"https://whoiszkuan.github.io/categories/Web%E5%AE%89%E5%85%A8/"},{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/categories/Linux/"},{"name":"配置","slug":"Linux/配置","permalink":"https://whoiszkuan.github.io/categories/Linux/%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://whoiszkuan.github.io/tags/HTTP/"},{"name":"Web","slug":"Web","permalink":"https://whoiszkuan.github.io/tags/Web/"},{"name":"Linux","slug":"Linux","permalink":"https://whoiszkuan.github.io/tags/Linux/"},{"name":"Tools","slug":"Tools","permalink":"https://whoiszkuan.github.io/tags/Tools/"}]}